CREATE OR REPLACE TABLE DIM_COURSE(
    Course_ID INT NOT NULL,
    Course_Name varchar(50)
  );


CREATE OR REPLACE TABLE DIM_INSTRUCTOR(
	Instructor_ID INT NOT NULL,
    Instructor_Name varchar(50)
  );
  
--Create Table
CREATE OR REPLACE TABLE DIM_STUDENT(
    Student_ID int NOT NULL,
	Student_Name varchar(50),
    Email varchar(50),
	Date_of_birth varchar(50),
	Gender varchar(50),
    StartDate datetime,
	EndDate datetime,
	Rating_class varchar(50),
	Class_recommendation varchar(50),
	Final_score varchar(50),
	Instructor_rating varchar(50)
  );
 

CREATE OR REPLACE TABLE FACTTRANSACTION(
	Course_ID int NOT NULL,
	Transaction_ID int NOT NULL,
    Course_Name varchar(50),
	Rating_class varchar(50),
	Class_recommendation varchar(50),
	Final_Score varchar(50),
	Instructor_rating varchar(50),
	Registered_date datetime,
	Instructor_ID int NOT NULL,
	Student_ID int NOT NULL
  );

-- Create roles and Grant permissions
-- Create USERS
CREATE USER longbv
PASSWORD = 'password123' 
DEFAULT_ROLE = "TRAINER";

CREATE USER mainq
PASSWORD = 'password123' 
DEFAULT_ROLE = "TRAINER";

--create roles trainer and grant access
CREATE OR REPLACE ROLE TRAINER;
GRANT ROLE TRAINER TO ROLE SYSADMIN;

GRANT ROLE TRAINER TO USER longbv;
GRANT ROLE TRAINER TO USER mainq;

GRANT USAGE, MONITOR ON DATABASE EDUCATIONDATA TO ROLE TRAINER;
GRANT USAGE, MONITOR ON SCHEMA DWHOUSE TO ROLE TRAINER;


GRANT SELECT ON ALL TABLES IN SCHEMA DWHOUSE TO ROLE TRAINER;
GRANT MONITOR, OPERATE, USAGE ON WAREHOUSE COMPUTE_WH TO ROLE TRAINER;

--MASKING DATA
CREATE ROLE DEV;
CREATE ROLE ANALYST;

CREATE ROLE masking_admin;

GRANT CREATE MASKING POLICY on SCHEMA DWHOUSE to ROLE masking_admin

GRANT SELECT ON TABLE "EDUCATIONDATA"."DWHOUSE"."FACTTRANSACTION" TO ROLE DEV;
GRANT SELECT ON TABLE "EDUCATIONDATA"."DWHOUSE"."FACTTRANSACTION" TO ROLE ANALYST;

--GRANT ROLE FOR THIS USER
GRANT ROLE DEV TO USER HANK0720;
GRANT ROLE ANALYST TO USER HANK0720;
GRANT ROLE masking_admin TO USER HANK0720;

--GRANT SCHEMA

GRANT USAGE, MONITOR ON DATABASE EDUCATIONDATA TO ROLE DEV;
GRANT USAGE, MONITOR ON SCHEMA DWHOUSE TO ROLE DEV;

GRANT SELECT ON ALL TABLES IN SCHEMA DWHOUSE TO ROLE DEV;
GRANT MONITOR, OPERATE, USAGE ON WAREHOUSE COMPUTE_WH TO ROLE DEV;

GRANT USAGE, MONITOR ON DATABASE EDUCATIONDATA TO ROLE ANALYST;
GRANT USAGE, MONITOR ON SCHEMA DWHOUSE TO ROLE ANALYST;

GRANT SELECT ON ALL TABLES IN SCHEMA DWHOUSE TO ROLE ANALYST;
GRANT MONITOR, OPERATE, USAGE ON WAREHOUSE COMPUTE_WH TO ROLE ANALYST;

GRANT USAGE, MONITOR ON DATABASE EDUCATIONDATA TO ROLE masking_admin;
GRANT USAGE, MONITOR ON SCHEMA DWHOUSE TO ROLE masking_admin;

GRANT SELECT ON ALL TABLES IN SCHEMA DWHOUSE TO ROLE masking_admin;
GRANT MONITOR, OPERATE, USAGE ON WAREHOUSE COMPUTE_WH TO ROLE masking_admin;

--CREATE MASKING POLICY

create or replace masking policy STUDENT_ID as (val number) returns number ->
    case
        when current_role() in ('ANALYST', 'ACCOUNTADMIN') then val
    else '999999999999'
    end;

ALTER TABLE IF EXISTS "EDUCATIONDATA"."DWHOUSE"."FACTTRANSACTION" MODIFY COLUMN STUDENT_ID 
SET MASKING POLICY STUDENT_ID

create or replace masking policy CLASS_RECOMMENDATION as (val varchar) returns varchar ->
    case
        when current_role() in ('ANALYST', 'ACCOUNTADMIN') then val
    else '***********'
    end;
 
ALTER TABLE IF EXISTS "EDUCATIONDATA"."DWHOUSE"."FACTTRANSACTION" MODIFY COLUMN CLASS_RECOMMENDATION 
SET MASKING POLICY CLASS_RECOMMENDATION


SHOW MASKING POLICIES;
DROP MASKING POLICY RATING_CLASS

-- TEST

USE ROLE DEV;
select * from FACTTRANSACTION

USE ROLE ANALYST;
select * from FACTTRANSACTION